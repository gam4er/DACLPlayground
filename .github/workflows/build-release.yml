name: build-and-release

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-2022
    defaults:
      run:
        shell: pwsh
        working-directory: ${{ github.workspace }}   # явный working dir (по умолчанию так и есть)
    env:
      CONFIGURATION: Release
      SOLUTION: DACLPlayground.sln
      BUILD_DIR: ParseJsonWithSDDLs\bin\Release     # ← исправили
      DIST_DIR: dist

    steps:
      - uses: actions/checkout@v4

      - uses: NuGet/setup-nuget@v2
        with:
          nuget-version: latest
      # Официальный экшен для nuget. :contentReference[oaicite:0]{index=0}

      - uses: microsoft/setup-msbuild@v2
      # Добавляет MSBuild в PATH для .NET Framework проектов. :contentReference[oaicite:1]{index=1}

      - name: Cache NuGet
        uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/packages
            ~\AppData\Local\NuGet\Cache
            packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.sln', '**/*.csproj', '**/packages.config') }}
          restore-keys: ${{ runner.os }}-nuget-

      - name: NuGet restore
        run: nuget restore "$env:SOLUTION"

      - name: Build (MSBuild)
        run: msbuild "$env:SOLUTION" /p:Configuration=$env:CONFIGURATION /m

      - name: Prepare dist
        run: |
          New-Item -ItemType Directory -Force -Path "$env:DIST_DIR" | Out-Null
          Write-Host "Workspace: ${{ github.workspace }}"
          Write-Host "Expected build dir: $env:BUILD_DIR"
          if (-not (Test-Path "$env:BUILD_DIR")) {
            Write-Host "Tree under workspace:"; Get-ChildItem -Recurse -Depth 3 | Select-Object FullName | Out-Host
            throw "Build output not found: $env:BUILD_DIR"
          }
          $zipName = "ParseJsonWithSDDLs_${{ github.ref_name }}.zip"
          $zipPath = Join-Path "$env:DIST_DIR" $zipName
          if (Test-Path $zipPath) { Remove-Item $zipPath -Force }
          Compress-Archive -Path "$env:BUILD_DIR\*" -DestinationPath $zipPath -Force
          Write-Host "ZIP: $zipPath"

      - uses: actions/upload-artifact@v4
        with:
          name: ParseJsonWithSDDLs-${{ github.ref_name }}
          path: dist/*.zip
          retention-days: 14
      # Доки upload-artifact v4. :contentReference[oaicite:2]{index=2}

      - name: Create GitHub Release (on tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*.zip
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # Экшен релизов "на теге". :contentReference[oaicite:3]{index=3}
